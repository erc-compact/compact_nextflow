#!/bin/bash
#SBATCH -D /hercules/scratch/vishnu/compact_nextflow
#SBATCH -J nf-workflow-309rMt1tWiw5Hm
#SBATCH -o /hercules/scratch/vishnu/compact_nextflow/nf-309rMt1tWiw5Hm.log
#SBATCH --no-requeue
set -e
set -o pipefail

# Input variables:
#
# - NXF_UUID: nextflow session id generated by tower
# - NXF_LOG_FILE: nextflow log file name
# - NXF_OUT_FILE: nextflow output file name
# - NXF_IGNORE_RESUME_HISTORY: do not stop for missing nextflow history file
# - NXF_CONFIG_BASE64: nextflow config file encoded as base64 string
# - NXF_SCM_BASE64: nextflow scm file encoded as base64 string
# - NXF_DEBUG: enable debugging mode
# - TOWER_ACCESS_TOKEN: Tower access token
# - TOWER_WORKFLOW_ID: Workflow ID generated by Tower
# - TOWER_CONFIG_BASE64: tower config file encoded as base64 string
# - TOWER_CONFIG_FILE: tower config file name

export NXF_IGNORE_RESUME_HISTORY=true
export NXF_WORK=/hercules/scratch/vishnu/pipeline_test
export NXF_EXIT_FILE=nf-309rMt1tWiw5Hm.exit
export NXF_CONFIG_FILE=nf-309rMt1tWiw5Hm.config
export NXF_OUT_FILE=nf-309rMt1tWiw5Hm.txt
export NXF_ASSETS=/hercules/scratch/vishnu/pipeline_test/.nextflow/pipelines/9e41789b
export NXF_UUID=86887ee9-d4b9-45a5-89d4-72b78dc6039e
export NXF_TML_FILE=timeline-309rMt1tWiw5Hm.html
export TOWER_WORKFLOW_ID=309rMt1tWiw5Hm
export NXF_ANSI_LOG=false
export NXF_PLUGINS_DEFAULT=nf-tower
export NXF_PRERUN_BASE64=bW9kdWxlIGxvYWQgamRrLzE3LjAuNgpleHBvcnQgVE9XRVJfQUNDRVNTX1RPS0VOPWV5SmhiR2NpT2lKSVV6STFOaUo5LmV5SnpkV0lpT2lJNU9EQTVJaXdpYm1KbUlqb3hOamswTkRVeE1ESTFMQ0p5YjJ4bGN5STZXeUoxYzJWeUlsMHNJbWx6Y3lJNkluUnZkMlZ5TFdGd2NDSXNJbVY0Y0NJNk1UWTVORFExTkRZeU5Td2lhV0YwSWpveE5qazBORFV4TURJMWZRLnJXUGVXQ0YyaHhMVGFkMXljQlJkMjQ1SFJ2dVI1Zm5NeUc5SHpuejV2UTQKZXhwb3J0IFRPV0VSX1JFRlJFU0hfVE9LRU49ZXlKaGJHY2lPaUpJVXpJMU5pSjkuT1RZMll6aGpaV0l0WVdReVpTMDBPR1kxTFdJMllqZ3ROalU1T0RRMVlUQmpNalF6LkpVVExaSjNDbUh2cXpIZmtCcTJHLWxaVVoxZFZiM1FKcTM3NjQwOHdjNUUKZXhwb3J0IE5YRl9TQ01fRklMRT1odHRwczovL2FwaS50b3dlci5uZi9lcGhlbWVyYWwvamZGSjhKbnh0Ylc2a1RDcjhIaE1UQQo=
export NXF_LOG_FILE=nf-309rMt1tWiw5Hm.log
export NXF_CONFIG_BASE64=dGltZWxpbmUuZW5hYmxlZCA9IHRydWUKdGltZWxpbmUuZmlsZSA9ICIkTlhGX1RNTF9GSUxFIgpwcm9jZXNzLmV4ZWN1dG9yID0gJ3NsdXJtJwp3b3JrRGlyID0gJy9oZXJjdWxlcy9zY3JhdGNoL3Zpc2hudS9waXBlbGluZV90ZXN0Jwo=

[[ $NXF_DEBUG ]] && (env | sort) && set -x
cache_path=".nextflow/cache/$NXF_UUID"

function save_exit() {
    # Save exit code to file: note NXF_EXIT_FILE is expected to always be set; otherwise, the script will fail (return a non-zero exit code) at this point.
    [[ $NXF_EXIT_FILE ]] && printf $1 > $NXF_EXIT_FILE
}

function pre_run() {
    if [[ $NXF_PRERUN_BASE64 ]]; then
      source /dev/stdin <<<"$(cat <(echo $NXF_PRERUN_BASE64 | base64 -d))" > >(tee -a $NXF_OUT_FILE) 2>&1
    fi
}

function post_run() {
    if [[ $NXF_POSTRUN_BASE64 ]]; then
      bash <(echo $NXF_POSTRUN_BASE64 | base64 -d) > >(tee -a $NXF_OUT_FILE) 2>&1 || true
    fi
}

function on_exit() {
    NXF_EXIT_STATUS=$?
    save_exit $NXF_EXIT_STATUS
    rm -rf $NXF_SECRETS_FILE
    export NXF_EXIT_STATUS
    post_run
    exit $NXF_EXIT_STATUS
}

function load_cache() {
    if [[ $TOWER_RESUME_DIR ]]; then
      mkdir -p "$cache_path"
      [ -e "$TOWER_RESUME_DIR/$cache_path" ] && rsync -r "$TOWER_RESUME_DIR/$cache_path"/ "$cache_path" || true
    fi
}

function term_run() {
  kill -TERM $nf_pid
  wait $nf_pid
}

trap 'save_exit $?' EXIT

pre_run
load_cache

if [[ $NXF_CONFIG_BASE64 ]]; then
  echo $NXF_CONFIG_BASE64 | base64 -d > ${NXF_CONFIG_FILE:-nextflow.config}
  unset NXF_CONFIG_BASE64
fi

# save tower config file
if [[ $TOWER_CONFIG_BASE64 ]]; then
  echo $TOWER_CONFIG_BASE64 | base64 -d > $TOWER_CONFIG_FILE
fi

# save secrets
if [[ $NXF_SECRETS_BASE64 ]]; then
  export NXF_SECRETS_FILE=$PWD/nf-${TOWER_WORKFLOW_ID}.secrets.json
  echo $NXF_SECRETS_BASE64 | base64 -d > $NXF_SECRETS_FILE
  chmod 600 $NXF_SECRETS_FILE
fi

[[ $NXF_DEBUG ]] && nextflow -Dcapsule.log=verbose info -dd

trap term_run TERM INT USR2
trap on_exit EXIT
trap '' USR1

nextflow run https\://github.com/erc-compact/compact_nextflow -name distraught_mestorf -with-tower -profile hercules -main-script main.nf -latest > >(tee -a $NXF_OUT_FILE) 2>&1 &
nf_pid=$!
wait $nf_pid
